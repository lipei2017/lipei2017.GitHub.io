{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"totalCount":10,"edges":[{"node":{"id":"52184721-2572-5902-a493-ce538da99287","frontmatter":{"title":"chrome","date":"13 December, 2021"},"fields":{"slug":"/chrome/"},"excerpt":"一秒钟让 Chrome 变成所见即所得的编辑器 获取某个 DOM 元素绑定的事件   getEventListeners($('selector')) 监测事件 当你需要监视某个DOM触发的事件时，也可以用到控制台。例如下面这些方法： monitorEvents…"}},{"node":{"id":"750e166f-931e-5225-ad04-d4159705d6c3","frontmatter":{"title":"react","date":"27 May, 2021"},"fields":{"slug":"/react/"},"excerpt":"所有 React 组件都必须像纯函数一样保护它们的 props 不被更改。 what is a fiber pause work and come back to it later. assign priority to different types of work…"}},{"node":{"id":"ac723c1f-21c5-54f3-bf74-2e60bbd5709e","frontmatter":{"title":"english","date":"27 May, 2021"},"fields":{"slug":"/en/"},"excerpt":"a abide by 遵守 absence 缺乏 accidental 意外的 AOP (Aspect Oriented Progrumming) 面向切面编程是指一种在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想 approach 方法 appropriate…"}},{"node":{"id":"7433145c-824a-5186-9ac7-aad89eb93b02","frontmatter":{"title":"git","date":"19 May, 2021"},"fields":{"slug":"/git/"},"excerpt":"git 工作流 Git Flow GitHub Flow GitLab Flow GitLab flow 是 GitLab 官方推荐的分支管理策略，Gitlab flow 的最大原则叫做\"上游优先\"（upsteam first），即只存在一个主分支 master…"}},{"node":{"id":"5d989a4a-d370-5009-b6e4-c17266dfbd8e","frontmatter":{"title":"note","date":"12 May, 2021"},"fields":{"slug":"/note/"},"excerpt":"vscode npm install 后 vscode @typescript-eslint 全部报错 Chrome 浏览器的渲染原理 https://www.imyangyong.com/blog/2019/02/%E6%B5%8F%E8%A7%88%E5%99%A…"}},{"node":{"id":"83eab990-5f01-5818-aa91-e0b9af975a5e","frontmatter":{"title":"note","date":"12 May, 2021"},"fields":{"slug":"/webpack/"},"excerpt":"每个额外的 loader/plugin 都有其启动时间。尽量少地使用工具。"}},{"node":{"id":"a0ac15f3-aa0d-5108-9712-1e9088910fed","frontmatter":{"title":"设计模式","date":"27 April, 2021"},"fields":{"slug":"/GoF/"},"excerpt":"单例模式 保证一个类仅有一个实例，并提供一个访问它的全局访问点。 惰性单例模式：在合适的时候才创建对象，并且只创建唯一的一个。 通用惰性单例 策略模式 定义一系列的算法，把它们一个个封装起来，并且使用他们可以互相替换"}},{"node":{"id":"d5974187-7b06-5760-89bf-19e80841e213","frontmatter":{"title":"npm","date":"26 April, 2021"},"fields":{"slug":"/npm/"},"excerpt":"npm version 后面参数说明： patch：小变动，比如修复 bug 等，版本号变动 v1.0.0->v1.0.1\nminor：增加新功能，不影响现有功能,版本号变动 v1.0.0->v1.1.0\nmajor：破坏模块对向后的兼容性，版本号变动 v1.0.0->v2.…"}},{"node":{"id":"f487b56b-afcb-55f7-a3eb-d862d5d2cf62","frontmatter":{"title":"module","date":"26 April, 2021"},"fields":{"slug":"/module/"},"excerpt":"在 ES6 之前，社区制定了一些模块加载方案，最主要的有 CommonJS 和 AMD 两种。前者用于服务器，后者用于浏览器。ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD…"}},{"node":{"id":"ca4b93d1-42d5-542a-bcf8-21bec61744c7","frontmatter":{"title":"js","date":"26 April, 2021"},"fields":{"slug":"/js/"},"excerpt":"Script async 与 defer 有什么区别 相同点: 异步加载 (fetch) 不同点: async 加载(fetch)完成后立即执行 (execution)； defer 加载(fetch)完成后延迟到 DOM 解析完成后才会执行(execution…"}}]}},"pageContext":{}},"staticQueryHashes":["3159585216"]}