{"componentChunkName":"component---src-templates-blog-post-js","path":"/react/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>所有 React 组件都必须像纯函数一样保护它们的 props 不被更改。</p>\n</blockquote>\n<h2>what is a fiber</h2>\n<ul>\n<li>pause work and come back to it later.</li>\n<li>assign priority to different types of work.</li>\n<li>reuse previously completed work.</li>\n<li>abort work if it's no longer needed.</li>\n</ul>\n<h2>Dereference values late</h2>\n<p>When using mobx-react it is recommended to dereference values as late as possible. This is because MobX will re-render components that dereference observable values automatically. If this happens deeper in your component tree, less components have to re-render.</p>\n<p>Slower:</p>\n<pre><code class=\"language-js\">&#x3C;DisplayName name={person.name} />\n</code></pre>\n<p>Faster:</p>\n<pre><code class=\"language-js\">&#x3C;DisplayName person={person} />\n</code></pre>\n<p>In the faster example, a change in the name property triggers only DisplayName to re-render, while in the slower one the owner of the component has to re-render as well. There is nothing wrong with that, and if rendering of the owning component is fast enough (usually it is!), then this approach works well.</p>","frontmatter":{"title":"react"}}},"pageContext":{"slug":"/react/"}},"staticQueryHashes":["3159585216"]}