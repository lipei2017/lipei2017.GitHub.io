{"componentChunkName":"component---src-templates-blog-post-js","path":"/chrome/","result":{"data":{"markdownRemark":{"html":"<ol>\n<li>一秒钟让 Chrome 变成所见即所得的编辑器</li>\n</ol>\n<pre><code class=\"language-js\">document.body.contentEditable = true;\n$('iframe').contentWindow.document.body.contentEditable = true;\n</code></pre>\n<ol start=\"2\">\n<li>获取某个 DOM 元素绑定的事件</li>\n</ol>\n<p>  getEventListeners($('selector'))</p>\n<ol start=\"3\">\n<li>监测事件</li>\n</ol>\n<p>当你需要监视某个DOM触发的事件时，也可以用到控制台。例如下面这些方法：</p>\n<ul>\n<li>monitorEvents($('selector')) 会监测某个元素上绑定的所有事件，一旦该元素的某个事件被触发就会在控制台里显示出来。</li>\n<li>monitorEvents($('selector'),'eventName') 可以监听某个元素上绑定的具体事件。第二个参数代表事件类型的名称。例如 monitorEvents($('#firstName'),'click') 只监测ID为firstName的元素上的click事件。</li>\n<li>monitorEvents($('selector'),['eventName1','eventName3',….]) 同上。可以同时检测具体指定的多个事件类型。</li>\n<li>unmonitorEvents($('selector')) 用来停止对某个元素的事件监测。</li>\n<li>列出某个元素的所有属性</li>\n</ul>\n<p>你也可以通过控制台列出某个元素的所有属性：\ndir($('selector')) 会返回匹配选择器的DOM元素的所有属性，你可以展开输出的结果查看详细内容。</p>","frontmatter":{"title":"chrome"}}},"pageContext":{"slug":"/chrome/"}},"staticQueryHashes":["3159585216"]}